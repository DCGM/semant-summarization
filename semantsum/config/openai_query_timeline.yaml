name: OpenAI Query Multi Timeline  # Name of the summarization.
summary_type: query-based multi-document timeline summarizer # Summarization type.
provider: openai # Provider of the summarization.
description: Performs query-based multi-document summarization in form of timeline. # Description of the summarization.
version: 1.0.0 # Version of the summarization workflow.
recommended_num_texts: 0 # Recommended number of texts for summarization.
summarizer: # Summarizer configuration.
  cls: OpenAIQueryBasedMultiDocSummarizer  # name of class that is subclass of Summarizer
  config: # configuration for defined class
    api:  # OpenAI API configuration.
      api_key:  # OpenAI API key.
      base_url: # Base URL for API.
    model: gpt-4o-mini # Name of model that should be used.
    prompt_builder: # Prompt builder. Available fields are: query, text.
      template: |  # Jinja2 template for prompt sequence. It can be a string, dictionary with keys 'segment_name' and 'template', or a sequence of messages with role and content. If you use dictionary all parts will be concatenated and SegmentedString will be used for the rendered result.
        Vytvoř souhrn následujících výsledků vyhledávání ve formě časové řady. Časová řada má formu odrážek vždy uvozenými časovým údajem následovaným popisem událostí. Tento souhrn musí být relevantní k dotazu uživatele. Cituj zdroje s použitím id výsledku v hranatých závorkách. Snaž se ve svém souhrnu použít všechny vyskytující se časové údaje ve výsledku vyhledávání. Pokud nenajdeš žádný časový údaj, vygeneruj prázdné json pole.
        Použij současnou češtinu, přestože výsledky vyhledávání ji používat nemusí.
        
        Uživatel zadal do vyhledávače historických dokumentů dotaz:
        
        {{query}}
        
        Tento dotaz mu vrátil následující výsledky:
        
        {% for t in text %}Výsledek [{{loop.index}}]: {{t}}
        {% endfor %}
      role_key_form: role # How the dict key would be named in built prompt sequence. Doesn't effect key name in template config.
      content_key_form: content # How the dict key would be named in built prompt sequence. Doesn't effect key name in template config.
    structured: # Structured summary configuration.
      summary_name: timeline  # Name of the summary field. (e.g., timeline)
      summary_description: # Description of the summary field.
      sequence_name: events # Name of the sequence field. (e.g., events)
      sequence_description: # Description of the sequence field.
      label_name: time_descriptor # Name of the label field. (e.g., time_descriptor)
      label_description: # Description of the label field.
      content_name: summary # Name of the content field. (e.g., summary)
      content_description: # Description of the content field.
    structured_2_str: '{{label}}: {{content}}' # Jinja template for converting item of structured summary to string (available fields: label, content).
